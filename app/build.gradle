plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id("org.jlleitschuh.gradle.ktlint") version "11.0.0"
}

def apikeyPropertiesFile = rootProject.file("local.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.catexplorer"
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"
        
        // Expecting a variable `CAT_FACTS_API_KEY` in the local.properties file, with the key
        // from the CATFACTS API.
        buildConfigField("String", "CAT_FACTS_API_KEY", apikeyProperties['CAT_FACTS_API_KEY'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

tasks.getByPath("preBuild").dependsOn("ktlintFormat")

ktlint{
    android = true
    ignoreFailures = false
    disabledRules = ["no-wildcard-imports"]
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "sarif"
    }
}


dependencies {

    def nav_version = "2.5.0"
    def retrofitVersion = "2.9.0"
    def room_version = "2.4.2"


    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "com.google.android.material:material:$compose_material"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.2'
    implementation 'androidx.activity:activity-compose:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //Navigation dependencies
    implementation("androidx.navigation:navigation-compose:$nav_version")

    //Hilt dependencies
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-android-compiler:2.42"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"



    //Retrofit dependencies
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"

    //ViewModel compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0"

    //Paging 3.0
    implementation 'androidx.paging:paging-compose:1.0.0-alpha17'

    //Coil dependencies
    implementation("io.coil-kt:coil-compose:2.1.0")

    //Accompanist dependencies
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.17.0"
    implementation "com.google.accompanist:accompanist-swiperefresh:0.17.0"
    implementation "com.google.accompanist:accompanist-insets-ui:0.17.0"


    //Room dependencies
    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")
    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")


    //DataStore dependencies
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    //Compose-ratingbar dependencies
    implementation 'io.github.a914-gowtham:compose-ratingbar:1.0.6'

    //Coroutines dependencies
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3")


}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}